* Config

The ~default.nix~ file here imports all the stuff the configuration needs, so to get my configuration I just need to import this directory directly, as is done in ~deploy/default.nix~. A couple directories in here then define a ~default.nix~ file that imports files within that directory with certain rules.

A general idea in this directory is to not set options directly, but rather define new options that when enabled set other options. Combining this with the importing-all-files means that I don't have to worry about import-hell: I can move files around freely and not have to worry about having to change the paths to them, since I'm actually using the options they declare, not the files themselves. Also this enables me to add new files wherever i want and the options I declare there are automatically available wherever I want to set them, no need to import the new file.

** Hardware

Hardware related settings for my machines. Also contains some not-hardware related stuff I should put at the right place. This should probably be more in the style of [[https://github.com/NixOS/nixos-hardware][nixos-hardware]] eventually.

** Lib

Contains a slightly changed [[https://en.wikipedia.org/wiki/Directed_acyclic_graph][DAG]] Nix library [[https://github.com/rycee/home-manager/blob/master/modules/lib/dag.nix][taken from home-manager]] and a function to convert an attrset into a file hierarchy (I should probably PR this to nixpkgs).

** Machines

Machine-specific configuration, these files are imported directly from the nixops configuration in ~deploy/default.nix~.

** Modules

Will be removed soon, I used this directory previously to have a file-import based configuration, but eventually I got sick of it.

** New-modules

This is the new version of my modules directory, the ~default.nix~ file in it imports all nix files within that directory. Eventually I'm thinking of separating this directory into another repository and using it as a high-level NixOS settings collection. Currently it defines most options in the ~mine.*~ prefix.

** Personal

Here is my personal info that doesn't really belong in new-modules (because that one is supposed to be usable by others eventually), but still can be shared with the public (so it doesn't go in the private repo).

** Pkgs

This one calls each file and folder within it with ~callPackage~ to transform it into a usable Nix package. The result ends up in ~pkgs.mine~, to be used by other parts of the config. It also allows you to build each of the packages on its own, without relying on a NixOS evaluation. See that directories Readme for further info.
