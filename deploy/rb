#!/usr/bin/env bash

set -euo pipefail

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

tmp=$(mktemp -d)
trap 'rm -rf "$tmp"' exit

export NIX_PATH=nixpkgs=$(realpath "$DIR/../external/nixpkgs")

git() { command git -C "$DIR/.." "$@"; }
gitbranch() { git symbolic-ref --short HEAD; }

if [[ ! -z "$(git add --all --dry-run)" ]]; then
	git add --all
  git commit -v --allow-empty-message
fi

branch="$(gitbranch | \
	sed 's/^\.*//' | tr -cs '+-._?=[:alnum:]' -)"
msg="$(git log --pretty=format:'%h-%f' -1 \
	--no-merges --grep=".+" --extended-regexp)"
label="$(printf "%s-%.35s" "$branch" "$msg")"

nodes="[ "
for node in "$@"; do
  nodes+="\"$node\" "
done
nodes+="]"

echo "Building nix.conf..."
mkdir "$tmp/confdir"
nix-build "$DIR" --show-trace --out-link "$tmp/confdir/nix.conf" >/dev/null \
  -A config.nodes."$(hostname)".configuration.environment.etc.'"nix/nix.conf"'.source
export NIX_CONF_DIR="$tmp/confdir"

echo "Evaluating..."
nix-instantiate "$DIR" --show-trace --add-root "$tmp"/drv --indirect >/dev/null \
  --argstr label "$label" --arg nodes "$nodes"

echo "Building..."
nix-build "$tmp"/drv --out-link "$tmp/result" >/dev/null

echo "Deploying..."
"$tmp/result"

echo "Finished deploying"
